{"version":3,"sources":["spotify.js","components/Login.js","components/SidebarOption.js","StateProvider.js","components/Sidebar.js","components/Header.js","components/SongRow.js","components/Body.js","components/Footer.js","components/Player.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["loginUrl","join","Login","className","src","alt","href","SidebarOption","title","Icon","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","playlists","HomeIcon","SearchIcon","LibraryMusicIcon","items","map","playlist","name","Header","spotify","user","placeholder","type","display_name","Avatar","images","url","SongRow","playSong","track","onClick","id","album","songRow__info","artists","artist","Body","discover_weekly","dispatch","play","uris","then","response","getMyCurrentPlayingTrack","res","item","playing","description","context_uri","fontSize","tracks","Footer","token","useEffect","getMyCurrentPlaybackState","is_playing","handlePlayPause","pause","skipToNext","skipToPrevious","Grid","container","spacing","xs","Slider","aria-labelledby","Player","SpotifyWebApi","App","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","setAccessToken","getMe","getUserPlaylists","getPlaylist","getMyTopArtists","top_artists","Boolean","hostname","match","state","action","console","log","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.75b2de2e.chunk.js","sourcesContent":["// https://developer.spotify.com/documentation/web-playback-sdk/quick-start/#\r\n\r\nexport const authEndPoint = \"https://accounts.spotify.com/authorize\";\r\n\r\nconst redirectUri = \"http://localhost:3000/\";\r\n\r\nconst clientId = '26e725ac5e8641cab1a79ecc688b57cc';\r\n\r\nconst scopes = [\r\n    \"user-read-currently-playing\",\r\n    \"user-read-recently-played\",\r\n    \"user-read-playback-state\",\r\n    \"user-top-read\",\r\n    \"user-modify-playback-state\",\r\n]\r\n\r\nexport const getTokenFromUrl = () => {\r\n    return window.location.hash\r\n        .substring(1)\r\n        .split('&')\r\n        .reduce((initial, item) => {\r\n            let parts = item.split('=');\r\n            initial[parts[0]] = decodeURIComponent(parts[1]);\r\n\r\n            return initial;\r\n        }, {})\r\n}\r\n\r\nexport const loginUrl = `${authEndPoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`;","import React from 'react'\r\nimport './Login.css'\r\nimport { loginUrl } from '../spotify'\r\n\r\nfunction Login() {\r\n    return (\r\n        <div className='login'>\r\n            <img\r\n                className=''\r\n                src='https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg'\r\n                alt=''\r\n            />\r\n            <a href={loginUrl}>LOGIN WITH SPOTIFY</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport './SidebarOption.css'\r\n\r\nfunction SidebarOption({title, Icon}) {\r\n    return (\r\n        <div className='sidebarOption'>\r\n            {Icon && <Icon className='sidebarOption__icon' />}\r\n            {Icon ? <h4>{title}</h4> :<p>{title}</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarOption\r\n","// setup data layer\r\n// we need this to track the basket\r\nimport React, { createContext, useContext, useReducer } from 'react'\r\n\r\n// this is the data layer\r\nexport const StateContext = createContext();\r\n\r\n//build a provider\r\nexport const StateProvider = ({ reducer, initialState, children}) => (\r\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n)\r\n\r\n//this is how we use it inside of a component\r\nexport const useStateValue = () => useContext(StateContext)\r\n","import React from 'react'\r\nimport './Sidebar.css'\r\nimport SidebarOption from './SidebarOption'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\r\nimport { useStateValue } from '../StateProvider';\r\n\r\n\r\nfunction Sidebar() {\r\n    const [{ playlists }, dispatch] = useStateValue();\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <img\r\n                className='sidebar__logo'\r\n                src='https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg'\r\n                alt='spotify-logo'\r\n            />\r\n            <SidebarOption Icon={HomeIcon} title='Home'/>\r\n            <SidebarOption Icon={SearchIcon} title='Search'/>\r\n            <SidebarOption Icon={LibraryMusicIcon} title='Your Library'/>\r\n\r\n            <br />\r\n            <strong className='sidebar__title'>PLAYLISTS</strong>\r\n            <hr />\r\n\r\n            {playlists?.items?.map(playlist => (\r\n                <SidebarOption title={playlist.name} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport './Header.css'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {Avatar} from '@material-ui/core'\r\nimport { useStateValue } from '../StateProvider';\r\n\r\nfunction Header({spotify}) {\r\n    const [{ user }, dispatch] = useStateValue();\r\n    return (\r\n        <div className='header'>\r\n            <div className='header__left'>\r\n                <SearchIcon />\r\n                <input\r\n                    placeholder='Search for any artist, songs or podcasts '\r\n                    type='text'\r\n                />\r\n            </div>\r\n            <div className='header__right'>\r\n                <h4>{user?.display_name}</h4>\r\n                <Avatar src={user?.images[0]?.url} alt={user?.display_name} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport './SongRow.css'\r\n\r\nfunction SongRow({ playSong,track}) {\r\n    return (\r\n        <div className='songRow' onClick={() => playSong(track.id)}>\r\n            <img\r\n                className='songRow__album'\r\n                src={track.album.images[0].url}\r\n                alt=''\r\n            />\r\n            <div songRow__info>\r\n                <h1>{track.name}</h1>\r\n                <p>\r\n                    {track.artists.map(artist => artist.name).join(', ')} -{' '} {track.album.name}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SongRow\r\n","import React from 'react'\r\nimport './Body.css'\r\nimport Header from './Header'\r\nimport { useStateValue } from '../StateProvider';\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport SongRow from './SongRow';\r\n\r\nfunction Body({spotify}) {\r\n    const [{ discover_weekly }, dispatch] = useStateValue();\r\n\r\n    const playPlaylist = (id) => {\r\n        spotify.play({\r\n            context_uri: `spotify:playlist:2Uei8I20yeQoZIo28k4woo`\r\n        }).then(response => {\r\n            spotify.getMyCurrentPlayingTrack().then(res => {\r\n                dispatch({\r\n                    type: 'SET_ITEM',\r\n                    item: res.item\r\n                })\r\n                dispatch({\r\n                    type: 'SET_PLAYING',\r\n                    playing: true,\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    const playSong = (id) => {\r\n        spotify.play({\r\n            uris: [`spotify:track:${id}`]\r\n        }).then(response => {\r\n            spotify.getMyCurrentPlayingTrack().then(res => {\r\n                dispatch({\r\n                    type: 'SET_ITEM',\r\n                    item: res.item\r\n                })\r\n                dispatch({\r\n                    type: 'SET_PLAYING',\r\n                    playing: true,\r\n                })\r\n            })\r\n        })\r\n    }\r\n    return (\r\n        <div className='body'>\r\n            <Header spotify={spotify}/>\r\n\r\n            <div className='body__info'>\r\n                <img\r\n                    src={discover_weekly?.images[0].url}\r\n                    alt=''\r\n                />\r\n                <div className='body__infoText'>\r\n                    <strong>PLAYLIST</strong>\r\n                    <h2>Description weekly</h2>\r\n                    <p>{discover_weekly?.description}</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='body__songs'>\r\n                <div className='body__icons'>\r\n                    <PlayCircleFilledIcon\r\n                    className='body__shuffle'\r\n                    onClick={playPlaylist}\r\n                />\r\n                    <FavoriteIcon fontSize='large'/>\r\n                    <MoreHorizIcon />\r\n                </div>\r\n                {discover_weekly?.tracks.items.map(item => (\r\n                    <SongRow onClick={playSong} track={item.track} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body\r\n","import React, { useEffect } from 'react'\r\nimport './Footer.css'\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport RepeatIcon from '@material-ui/icons/Repeat';\r\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport { Grid, Slider} from '@material-ui/core';\r\nimport PlaylistPlayIcon from '@material-ui/icons/PlaylistPlay';\r\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\r\nimport { useStateValue } from '../StateProvider';\r\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\r\n\r\nfunction Footer({spotify}) {\r\n    const [{token, item, playing}, dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n        spotify.getMyCurrentPlaybackState().then(res => {\r\n            dispatch({\r\n                type:'SET_PLAYING',\r\n                playing: res.is_playing\r\n            })\r\n            dispatch({\r\n                type: 'SET_ITEM',\r\n                item: res.item\r\n            })\r\n        })\r\n    }, [spotify])\r\n\r\n    const handlePlayPause = () => {\r\n        if(playing){\r\n            spotify.pause();\r\n            dispatch({\r\n                type: 'SET_PLAYING',\r\n                playing: false\r\n            })\r\n        } else {\r\n            spotify.play();\r\n            dispatch({\r\n                type:'SET_PLAYING',\r\n                playing: true\r\n            })\r\n        }\r\n    }\r\n\r\n    const skipNext = () => {\r\n        spotify.skipToNext();\r\n        spotify.getMyCurrentPlayingTrack().then((res) => {\r\n            dispatch({\r\n                type: \"SET_ITEM\",\r\n                item: res.item,\r\n            });\r\n            dispatch({\r\n                type: \"SET_PLAYING\",\r\n                playing: true,\r\n            });\r\n        });\r\n    }\r\n\r\n    const skipPrevious = () =>{\r\n        spotify.skipToPrevious();\r\n        spotify.getMyCurrentPlayingTrack().then((res) => {\r\n            dispatch({\r\n                type: \"SET_ITEM\",\r\n                item: res.item,\r\n            });\r\n            dispatch({\r\n                type: \"SET_PLAYING\",\r\n                playing: true,\r\n            });\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className='footer'>\r\n            <div className='footer__left'>\r\n                <img\r\n                    src={item?.album.images[0].url}\r\n                    alt=''\r\n                    className='footer__albumLogo'\r\n                />\r\n                {\r\n                    item ? (\r\n                        <div className='footer__songInfo'>\r\n                            <h4>{item.name}</h4>\r\n                            <p>{item.artists.map(artist => artist.name).join(', ')}</p>\r\n                        </div>\r\n                    ) : (\r\n                        <div className='footer__songInfo'>\r\n                            <h4>No song is playing</h4>\r\n                            <p>...</p>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n\r\n            <div className='footer__center'>\r\n                <ShuffleIcon className='footer__green' />\r\n                <SkipPreviousIcon onClick={skipNext} className='footer__icon'/>\r\n                {\r\n                    playing ? (\r\n                        <PauseCircleOutlineIcon\r\n                            onClick={handlePlayPause}\r\n                            fontSize='large'\r\n                            className='footer__icon'\r\n                        />\r\n                    ) : (\r\n                        <PlayCircleOutlineIcon\r\n                            onClick={handlePlayPause}\r\n                            fontSize='large'\r\n                            className='footer__icon'\r\n                        />\r\n                    )\r\n                }\r\n                <SkipNextIcon onClick={skipPrevious} className='footer__icon' />\r\n                <RepeatIcon className='footer__green'/>\r\n            </div>\r\n            <div className='footer__right'>\r\n                <Grid container spacing={2}>\r\n                    <Grid item>\r\n                        <PlaylistPlayIcon />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <VolumeDownIcon />\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <Slider aria-labelledby='continuos-slider' />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport './Player.css'\r\nimport Sidebar from './Sidebar'\r\nimport Body from './Body'\r\nimport Footer from './Footer'\r\n\r\nfunction Player({ spotify }) {\r\n    return (\r\n        <div className='player'>\r\n            <div className='player__body'>\r\n                <Sidebar />\r\n                <Body spotify={spotify} />\r\n            </div>\r\n            <Footer spotify={spotify} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player\r\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport Login from './components/Login'\nimport { getTokenFromUrl } from './spotify';\nimport SpotifyWebApi from 'spotify-web-api-js'\nimport Player from './components/Player'\nimport { useStateValue } from './StateProvider';\n\nconst spotify = new SpotifyWebApi()\n\nfunction App() {\n  const [{ token }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      dispatch({\n        type: 'SET_TOKEN',\n        token: _token\n      });\n\n      dispatch({\n        type: 'SET_SPOTIFY',\n        spotify: spotify\n      })\n\n      spotify.setAccessToken(_token)\n\n      spotify.getMe().then(user => {\n        dispatch({\n          type: 'SET_USER',\n          user: user\n        })\n      })\n\n      spotify.getUserPlaylists().then(playlists => {\n        dispatch({\n          type: 'SET_PLAYLISTS',\n          playlists: playlists\n        })\n      })\n\n      spotify.getPlaylist('2Uei8I20yeQoZIo28k4woo').then(response => {\n        dispatch({\n          type: 'SET_DISCOVER_WEEKLY',\n          discover_weekly: response\n        })\n      })\n      spotify.getMyTopArtists().then(response => {\n        dispatch({\n          type: 'SET_TOP_ARTISTS',\n          top_artists: response\n        })\n      })\n    }\n  }, [token, dispatch])\n  return (\n    <div className=\"app\">\n      {\n        token ? (\n          <Player spotify={spotify} />\n        ) : (\n          <Login />\n        )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\r\n    user: null,\r\n    playlists: [],\r\n    playing: false,\r\n    item: null,\r\n    token: null,\r\n        //'BQCVU0JQgaVgtGEGZI1iWVxoSs82iQa4EvhlJNk8SS6y0wW3fX-DR1DJtwyABgLBT7oeIWm_w6enxBf8CRGaQC0XLMadRt3HufNxyL2_B_Tul032ws5tawIRMkTCR_unk4IQ9q6VH_sEN4c7ggMlit6ph2CMK8nqMXoZFJR83yVHIdt4',\r\n    top_artists: null,\r\n    spotify: null,\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n    switch(action.type) {\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            }\r\n        case 'SET_TOKEN':\r\n            return {\r\n                ...state,\r\n                token: action.token\r\n            }\r\n        case 'SET_PLAYLISTS':\r\n            return {\r\n                ...state,\r\n                playlists: action.playlists\r\n            }\r\n        case 'SET_DISCOVER_WEEKLY':\r\n            return {\r\n                ...state,\r\n                discover_weekly: action.discover_weekly\r\n            }\r\n        case \"SET_PLAYING\":\r\n            return {\r\n                ...state,\r\n                playing: action.playing,\r\n            };\r\n        case \"SET_TOP_ARTISTS\":\r\n            return {\r\n                ...state,\r\n                top_artists: action.top_artists,\r\n            };\r\n        case \"SET_SPOTIFY\":\r\n            return {\r\n                ...state,\r\n                spotify: action.spotify,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './StateProvider';\nimport reducer, { initialState } from './reducer'\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}